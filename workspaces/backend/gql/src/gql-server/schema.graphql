type Asset {
  createdAt: DateTime!
  description: String
  id: ID!
  images: [Image!]!
  name: String!
  proofOfPurchase: Document
  updatedAt: DateTime!
}

type AssetError implements Error {
  message: String!
}

union AssetResponse = Asset | AssetError

"""
Represents the Node `Buffer` type
"""
scalar Byte

input CreeateAssetInput {
  description: String
  images: [ImageInput!]
  name: String!
  proofOfPurchase: DocumentInput
}

"""
RFC 3339 compliant date-time string.
"""
scalar DateTime

type Document {
  asset: Asset!
  createdAt: DateTime!
  file: File!
  id: ID!
}

input DocumentInput {
  file: FileInput!
}

"""
A generic error interface.
"""
interface Error {
  message: String!
}

type File {
  buffer: Byte!
  createdAt: DateTime!
  filename: String!
  id: ID!
  mimeType: String!
}

input FileInput {
  buffer: Byte!
  filename: String!
  mimeType: String!
}

type Image {
  asset: Asset!
  createdAt: DateTime!
  description: String
  file: File!
  id: ID!
  name: String
}

input ImageInput {
  description: String
  file: FileInput!
  name: String
}

type Mutation {
  createAsset(data: CreeateAssetInput!): AssetResponse!
  deleteAsset(id: ID!): Void
  updateAsset(data: UpdateAssetInput!): AssetResponse!
}

type Query {
  asset(id: ID!): AssetResponse!
  assets: [AssetResponse!]!
}

input UpdateAssetInput {
  description: String
  id: ID!
  name: String
}

"""
Represents the absence of a value
"""
scalar Void
