type Asset {
  createdAt: TemporalInstant!
  description: String
  id: ID!
  images: [Image!]!
  name: String!
  proofOfPurchase: Document
  updatedAt: TemporalInstant!
}

type AssetError implements Error {
  message: String!
}

union AssetResponse = Asset | AssetError

type Assets {
  value: [Asset!]!
}

union AssetsResponse = AssetError | Assets

input CreateAssetInput {
  description: String
  images: [CreateImageInput!]
  name: String!
  proofOfPurchase: CreateDocumentInput
}

input CreateDocumentInput {
  file: CreateFileInput!
}

input CreateFileInput {
  buffer: Uint8Array!
  filename: String!
  mimeType: String!
}

input CreateImageInput {
  description: String
  file: CreateFileInput!
  name: String
  previousImageId: ID
}

input DeleteDocumentInput {
  id: ID!
}

input DeleteImageInput {
  id: ID!
}

type Document {
  asset: Asset!
  createdAt: TemporalInstant!
  file: File!
  id: ID!
}

interface Error {
  message: String!
}

type File {
  buffer: Uint8Array!
  createdAt: TemporalInstant!
  filename: String!
  id: ID!
  mimeType: String!
}

type Image {
  asset: Asset!
  createdAt: TemporalInstant!
  description: String
  file: File!
  id: ID!
  name: String
  updatedAt: TemporalInstant!
}

input MutateDocumentInput @oneOf {
  delete: DeleteDocumentInput
  update: UpdateDocumentInput
}

input MutateImageInput @oneOf {
  create: CreateImageInput
  delete: DeleteImageInput
  update: UpdateImageInput
}

type Mutation {
  createAsset(data: CreateAssetInput!): AssetResponse!
  deleteAsset(id: ID!): AssetError
  updateAsset(data: UpdateAssetInput!): AssetResponse!
}

type Query {
  asset(id: ID!): AssetResponse!
  assets: AssetsResponse!
}

scalar TemporalInstant

scalar Uint8Array

input UpdateAssetInput {
  description: String
  id: ID!
  images: [MutateImageInput!]
  name: String
  proofOfPurchase: MutateDocumentInput
}

input UpdateDocumentInput {
  file: CreateFileInput!
}

input UpdateImageInput {
  description: String
  file: CreateFileInput
  id: ID!
  name: String
  previousImageId: ID
}
